[{"/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/index.js":"1","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/reportWebVitals.js":"2","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/App.js":"3","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/components/TotalDisplay.js":"4","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/components/CalcButton.js":"5","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/reducers/index.js":"6","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/actions/index.js":"7"},{"size":500,"mtime":1615844292000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1615844292000,"results":"10","hashOfConfig":"9"},{"size":3614,"mtime":1615899018000,"results":"11","hashOfConfig":"9"},{"size":424,"mtime":1615844292000,"results":"12","hashOfConfig":"9"},{"size":286,"mtime":1615844292000,"results":"13","hashOfConfig":"9"},{"size":1705,"mtime":1615899014000,"results":"14","hashOfConfig":"9"},{"size":927,"mtime":1615899011000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1fudy93",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/index.js",[],["34","35"],"/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/reportWebVitals.js",[],"/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/App.js",["36"],"import React, { useReducer } from 'react';\nimport reducer,{ initialState } from './reducers/index'\nimport actions from './actions/index'\n\nimport './App.css';\n\nimport TotalDisplay from './components/TotalDisplay';\nimport CalcButton from './components/CalcButton';\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n\n\n  const handleApplyNumber = (num) => {\n    dispatch(actions.applyNumber(num))\n    // console.log(state)\n  };\n  const handleChangeOperation = (operation) => {\n    dispatch(actions.changeOperation(operation))\n    // console.log(state)\n  };\nconst handleClear = ()=> {\n  dispatch(actions.clearDisplay())\n}\n\nconst handleAddMemory = ()=>{\n  dispatch(actions.addMemory())\n}\n\nconst handleUpdateMemory = ()=>{\n  dispatch(actions.updateMemory())\n}\n\nconst handleClearMemory = ()=>{\n  dispatch(actions.clearMemory())\n}\n\nconsole.log(state)\n  return (\n\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"#\"><img width=\"40px\" src=\"./Lambda-Logo-Red.png\" alt=''/> Lambda Reducer Challenge</a>\n      </nav>\n\n      <div className = \"container row mt-5\">\n        <div className=\"col-md-12 d-flex justify-content-center\">\n          <form name=\"Cal\">\n\n            <TotalDisplay value={state.total}/>\n            <div className=\"row details\">\n            <span id=\"operation\"><b>Operation:</b>{state.operation}</span>\n              <span id=\"memory\"><b>Memory:</b> {state.memory}</span>\n            </div>\n\n            <div className=\"row\">\n            <CalcButton \n              onClick={()=>handleAddMemory()}\n              value={\"M+\"}/>\n              <CalcButton\n              onClick={()=>handleUpdateMemory()}\n              value={\"MR\"}/>\n              <CalcButton\n              onClick={()=>handleClearMemory()}\n              value={\"MC\"}/>\n            </div>\n\n            <div className=\"row\">\n            <CalcButton\n            // onClick={handleAddOne}\n              onClick={()=>(handleApplyNumber(1))}\n              value={1}/>\n              <CalcButton\n              onClick={()=>(handleApplyNumber(2))}\n              value={2}/>\n              <CalcButton\n              onClick={()=>(handleApplyNumber(3))}\n              value={3}/>\n            </div>\n\n            <div className=\"row\">\n          \n            <CalcButton\n              onClick={()=>(handleApplyNumber(4))}\n              value={4}/>\n              <CalcButton\n              onClick={()=>(handleApplyNumber(5))}\n              value={5}/>\n              <CalcButton\n              onClick={()=>(handleApplyNumber(6))}\n              value={6}/>\n            </div>\n\n            <div className=\"row\">\n              \n            <CalcButton\n              onClick={()=>(handleApplyNumber(7))}\n              value={7}/>\n              <CalcButton\n              onClick={()=>(handleApplyNumber(8))}\n              value={8}/>\n              <CalcButton\n              onClick={()=>(handleApplyNumber(9))}\n              value={9}/>\n            </div>\n\n            <div className=\"row\">\n             \n            <CalcButton\n              onClick={()=>handleChangeOperation('+')}\n               value={'+'}/>\n              <CalcButton\n              onClick={()=>handleChangeOperation('*')}\n              value={\"*\"}/>\n              <CalcButton\n              onClick={()=>handleChangeOperation('-')}\n              value={\"-\"}/>\n            </div>\n\n            <div className=\"row ce_button\">\n            <CalcButton onClick={()=>handleClear()}value={\"CE\"}/>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/components/TotalDisplay.js",[],"/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/components/CalcButton.js",[],"/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/reducers/index.js",["37"],"import CalcButton from '../components/CalcButton';\nimport { ADD_ONE, APPLY_NUMBER, CHANGE_OPERATION, CLEAR_DISPLAY, ADD_MEMORY, UPDATE_MEMORY, CLEAR_MEMORY} from './../actions';\n\n\n\nexport const initialState = {\n    \n    total: 0,\n    operation: '+',\n    memory: 0\n}\n\nconst calculateResult = (num1, num2, operation) => {\n    switch(operation) {\n        case(\"+\"):\n            return num1 + num2;\n        case(\"*\"):\n            return num1 * num2;\n        case(\"-\"):\n            return num1 - num2;\n            default:\n            return initialState.operation\n    }\n}\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case(ADD_ONE):\n            return({\n                ...state,\n                total: state.total + 1\n            });\n        case(APPLY_NUMBER):\n            return ({ \n                ...state, \n                total: calculateResult(state.total, action.payload, state.operation)\n                // total: Number(state.total + '' + action.payload)\n            });\n\n        case(CHANGE_OPERATION):\n            return ({\n                ...state,\n                operation: action.payload\n            });\n            case(CLEAR_DISPLAY):\n            return({\n            ...state,\n            total: 0\n            })\n\n        case(ADD_MEMORY):    \n            return({\n            ...state,\n            memory: state.total\n            })\n\n        case(UPDATE_MEMORY):    \n            return({\n            ...state,\n            memory: state.total + state.memory\n            })\n\n        case(CLEAR_MEMORY):    \n            return({\n            ...state,\n            memory: 0\n            })\n\n        default:\n            return state;\n\n    }\n}\nexport default reducer;\n","/Users/carolina/Desktop/web40projects/web-module-project-reducer/src/actions/index.js",["38"],"\nexport const CLEAR_DISPLAY= 'CLEAR_DISPLAY'\nexport const ADD_ONE = \"ADD_ONE\";\nexport const APPLY_NUMBER = \"APPLY_NUMBER\";\nexport const CHANGE_OPERATION = \"CHANGE_OPERATION\";\nexport const ADD_MEMORY= 'ADD_TO_MEMORY';\nexport const UPDATE_MEMORY= 'UPDATE_MEMORY';\nexport const CLEAR_MEMORY= 'CLEAR_MEMORY';\n\nconst addOne = () => {\n    return({type:ADD_ONE})\n}\n\nconst applyNumber = (number) => {\n    return({type:APPLY_NUMBER, payload:number})\n}\n\nconst changeOperation = (operation) => {\n    return({type:CHANGE_OPERATION, payload:operation})\n}\n\nconst clearDisplay = ()=>{\n    return({type: CLEAR_DISPLAY})\n}\n\nconst addMemory = ()=>{\n    return({type: ADD_MEMORY})\n}\n\nconst updateMemory = ()=>{\n    return({type: UPDATE_MEMORY})\n}\n\nconst clearMemory = ()=>{\n    return({type: CLEAR_MEMORY})\n}\n\nexport default {\n    addOne,\n    applyNumber,\n    changeOperation,\n    clearDisplay,\n    addMemory,\n    updateMemory,\n    clearMemory,\n}",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":45,"column":7,"nodeType":"45","endLine":45,"endColumn":44},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":38,"column":1,"nodeType":"52","endLine":46,"endColumn":2},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'CalcButton' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]